# This config is used to sweep the calibration error variance (eta) and plot the loss vs. eta.
# The command line to run this config is:
# python3 main.py evaluate -c {path to model config} --scenario eta -o {path to output directory}
# python3 main.py evaluate -c configs/evaluation_configs/calibration_sweep_error_config.yaml -m experiments/results/nonlinear_tracking_sineaccel_base_model/checkpoints/final_SubspaceNet_20250613_184942.pt --scenario eta -o experiments/results/nonlinear_tracking_sineaccel_base_model/evaluation

system_model:
  N: 8  # number of antennas
  M: 3   # number of sources
  T: 200  # number of snapshots
  snr: 10  # Higher SNR to isolate effects of calibration errors
  field_type: "far"
  signal_nature: "non-coherent"
  signal_type: "narrowband"
  wavelength: 1
  eta: 0.0  # Non-zero calibration error variance
  bias: 0.00  # Small bias in steering vector
  sv_noise_var: 0.00  # Small steering vector noise
  doa_range: 60
  doa_resolution: 1
  max_range_ratio_to_limit: 0.5
  range_resolution: 1
  nominal: false  # Apply calibration errors

dataset:
  samples_size: 256
  test_validation_train_split: [1.0, 0.0, 0.0]
  create_data: true
  save_dataset: false
  true_doa_test: null
  true_range_test: null

model:
  type: "SubspaceNet"
  params:
    diff_method: "esprit"
    train_loss_type: "rmspe"
    tau: 8
    field_type: "Far"
    regularization: "null"
    variant: "small"
    norm_layer: false
    batch_norm: false

training:
  enabled: false
  batch_size: 256
  optimizer: "Adam"
  scheduler: "ReduceLROnPlateau"
  learning_rate: 0.001
  weight_decay: 1e-9
  step_size: 50
  gamma: 0.5
  training_objective: "angle"
  use_wandb: false
  simulation_name: "evaluating_calibration_error_on_sine_accelbase_model"

simulation:
  train_model: false
  evaluate_model: true
  load_model: true
  save_model: false
  plot_results: true
  save_plots: true
  model_path: "experiments/results/nonlinear_tracking_sineaccel_base_model/checkpoints/final_SubspaceNet_20250613_184942.pt"
  subspace_methods:
    - "ESPRIT"


evaluation:
  save_results: true
  results_format: "json"
  detailed_metrics: true
  kalman_filter: true
  # Calibration error sweep parameters that will be used if --values is not specified on command line
  sweep_parameter: "eta"
  sweep_values: [0, 0.01, 0.05, 0.1, 0.2, 0.3, 0.5, 0.7, 0.9, 1.0]
  plot_performance_curve: true

trajectory:
  enabled: true
  trajectory_type: "sine_accel_nonlinear"
  trajectory_length: 100
  save_trajectory: false
  # Sine acceleration non-linear model parameters
  sine_accel_omega0: 0.05         # Base angular velocity (rad/s) - reduced to be more stable
  sine_accel_kappa: 1.0           # Sine acceleration coefficient (rad/sÂ²) - reduced to be more stable
  sine_accel_noise_std: 0.1       # Noise standard deviation (rad) - reduced to be more stable
  
  # Multiplicative noise non-linear model parameters (not used with sine_accel_nonlinear type)
  mult_noise_omega0: 0.2          # Base angular velocity (rad/s)
  mult_noise_amp: 0.8             # Amplitude of multiplicative term
  mult_noise_base_std: 0.2        # Base noise standard deviation (rad)
  
kalman_filter:
  filter_type: "extended"         # Type of Kalman filter: "standard" or "extended"
  process_noise_std_dev: null     # Use trajectory random walk std dev
  measurement_noise_std_dev: 0.5  # Measurement noise standard deviation (degrees)
  initial_covariance: 1.0         # Initial state covariance 